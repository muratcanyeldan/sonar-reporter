version: '3.8'
services:

  reporter:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sonar-reporter
    environment:
      SONAR_URL: http://sonarqube:9000/
      SONAR_TOKEN: INSERT_YOUR_SONAR_TOKEN_HERE
      SLACK_TOKEN: INSERT_YOUR_SLACK_TOKEN_HERE
      SLACK_CHANNEL_ID: INSERT_YOUR_CHANNEL_ID_HERE
      SLACK_USERNAME: Sonar Reporter
    ports:
      - "7001:7001"
    depends_on:
      - sonarqube

  sonarqube:
    image: sonarqube:community
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 8192M
        reservations:
          cpus: '0.25'
          memory: 2048M
    hostname: sonarqube
    container_name: sonarqube
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: muratcan
      SONAR_JDBC_PASSWORD: yeldan
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
  db:
    image: postgres:15
    hostname: postgresql
    container_name: postgresql
    environment:
      POSTGRES_USER: muratcan
      POSTGRES_PASSWORD: yeldan
      POSTGRES_DB: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:
    


